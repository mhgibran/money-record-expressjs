generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id      Int         @id @default(autoincrement())
  email   String      @unique(map: "User_email_key") @db.VarChar(255)
  name    String @db.VarChar(50)
  password   String @db.VarChar(255)
  phone   String? @db.VarChar(15) @unique(map: "User_phone_key")
  date_of_brith DateTime? @db.Date
  gender  UserGender
  created_at DateTime @default(now())
  updated_at DateTime? @updatedAt
  deleted_at DateTime?
  @@map("users")
}

enum UserGender {
  MALE
  FEMALE
}

model AccountImage {
  id  Int @id @default(autoincrement())
  image_url String @db.VarChar(120)
  created_at DateTime @default(now()) 
  updated_at DateTime? @updatedAt
  deleted_at DateTime?
  Accounts Account[]
  @@map("account_images")
}


model Account {
  id  Int @id @default(autoincrement())
  image_id Int
  name String @db.VarChar(60)
  balance Int @db.Int @default(0)
  created_at DateTime @default(now()) 
  updated_at DateTime? @updatedAt
  deleted_at DateTime?
  image AccountImage @relation(fields: [image_id], references: [id])
  AsTransactionSouce Transaction[] @relation("SourceAccount")
  ASTransactionTarget Transaction[] @relation("TargetAccount")
  @@map("accounts")
}


model TransactionCategory {
  id  Int @id @default(autoincrement())
  name String @db.VarChar(30)
  group String? @db.VarChar(30)
  created_at DateTime @default(now()) 
  updated_at DateTime? @updatedAt
  deleted_at DateTime?
  transaction Transaction[] @relation("Category")
  @@map("transaction_categories")
}

enum TransactionType {
  INCOME
  OUTCOME
  TRANSFER
}

model Transaction {
  id  Int @id @default(autoincrement())
  source_id Int?
  target_id Int?
  category_id Int?
  type TransactionType
  trx_date DateTime @db.Date
  description String? @db.VarChar(150)
  created_at DateTime @default(now()) 
  updated_at DateTime? @updatedAt
  deleted_at DateTime?
  AccountSource Account? @relation("SourceAccount",fields: [source_id], references: [id])
  AccountTarget Account? @relation("TargetAccount", fields: [target_id], references: [id])
  TransactionCategory TransactionCategory? @relation("Category", fields: [category_id], references: [id])
}